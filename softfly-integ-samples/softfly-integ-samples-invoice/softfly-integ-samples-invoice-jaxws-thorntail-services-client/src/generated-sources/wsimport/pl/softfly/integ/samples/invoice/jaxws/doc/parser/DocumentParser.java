package pl.softfly.integ.samples.invoice.jaxws.doc.parser;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.10 Generated source version: 2.1
 */
@WebServiceClient(name = "DocumentParser", targetNamespace = "http://parser.doc.jaxws.invoice.samples.integ.softfly.pl/", wsdlLocation = "http://localhost:8080/DocumentParser?wsdl")
public class DocumentParser
    extends Service {

  private final static URL DOCUMENTPARSER_WSDL_LOCATION;
  private final static WebServiceException DOCUMENTPARSER_EXCEPTION;
  private final static QName DOCUMENTPARSER_QNAME = new QName(
      "http://parser.doc.jaxws.invoice.samples.integ.softfly.pl/", "DocumentParser");

  static {
    URL url = null;
    WebServiceException e = null;
    try {
      url = new URL("http://localhost:8080/DocumentParser?wsdl");
    } catch (MalformedURLException ex) {
      e = new WebServiceException(ex);
    }
    DOCUMENTPARSER_WSDL_LOCATION = url;
    DOCUMENTPARSER_EXCEPTION = e;
  }

  public DocumentParser() {
    super(__getWsdlLocation(), DOCUMENTPARSER_QNAME);
  }

  public DocumentParser(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  private static URL __getWsdlLocation() {
    if (DOCUMENTPARSER_EXCEPTION != null) {
      throw DOCUMENTPARSER_EXCEPTION;
    }
    return DOCUMENTPARSER_WSDL_LOCATION;
  }

  /**
   * @return returns DocumentParserService
   */
  @WebEndpoint(name = "DocumentParserServicePort")
  public DocumentParserService getDocumentParserServicePort() {
    return super.getPort(new QName("http://parser.doc.jaxws.invoice.samples.integ.softfly.pl/",
        "DocumentParserServicePort"), DocumentParserService.class);
  }

  /**
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
   *                 Supported features not in the <code>features</code> parameter will have their
   *                 default values.
   * @return returns DocumentParserService
   */
  @WebEndpoint(name = "DocumentParserServicePort")
  public DocumentParserService getDocumentParserServicePort(WebServiceFeature... features) {
    return super.getPort(new QName("http://parser.doc.jaxws.invoice.samples.integ.softfly.pl/",
        "DocumentParserServicePort"), DocumentParserService.class, features);
  }

}
